{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","webcamRef","React","useRef","useState","imgSrc","setImgSrc","imgObj","setImgObj","cropImg","setCropImg","capture","useCallback","current","imageSrc","getScreenshot","image","Image","src","crop","setCrop","console","log","className","style","minHeight","audio","ref","screenshotFormat","width","onClick","onChange","newCrop","cropimg","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","height","getContext","drawImage","x","y","base64Image","toDataURL","getCroppedImage","dwnimg","base64Img","a","href","download","click","downloadImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oSAqHeA,MA5Gf,WAEE,IAAMC,EAAYC,IAAMC,OAAe,MAF1B,EAGeD,IAAME,SAAwB,MAH7C,mBAGNC,EAHM,KAGEC,EAHF,OAIcJ,IAAME,WAJpB,mBAIPG,EAJO,KAICC,EAJD,OAKgBN,IAAME,WALtB,mBAKPK,EALO,KAKEC,EALF,KAOPC,EAAUT,IAAMU,aAAY,WAChC,GAAIX,EAAUY,QAAS,CACrB,IAAMC,EAAWb,EAAUY,QAAQE,gBAEhCC,EAAQ,IAAIC,MAClBD,EAAME,IAAM,GAAGJ,EAEfN,EAAUQ,GAEPV,EAAUQ,MAGX,CAACb,EAAWK,IAnBF,EAqBWJ,IAAME,WArBjB,mBAqBNe,EArBM,KAqBAC,EArBA,KA8Db,OAvCDC,QAAQC,IAAIH,GAwCT,mCACE,sBAAKI,UAAU,eAAf,UACF,oBAAIA,UAAU,2BAAd,4BACA,sBAAKA,UAAU,yCAAf,UACC,sBAAKA,UAAU,SAAf,UACC,oBAAIA,UAAU,yBAAd,oBACA,qBAAKA,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,KAAzD,SACC,cAAC,IAAD,CACCC,OAAO,EACPC,IAAK1B,EACL2B,iBAAiB,aACjBC,MAAO,QAGT,qBAAKN,UAAU,6BAAf,SACC,wBAAQA,UAAU,gBAAgBO,QAASnB,EAA3C,gCAGF,sBAAKY,UAAU,SAAf,UACC,oBAAIA,UAAU,yBAAd,kBACA,qBAAKA,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,KAAzD,SACEpB,GAAW,cAAC,IAAD,CAAWa,IAAKb,EAAQc,KAAMA,EAAMY,SAAU,SAAAC,GAAO,OAAIZ,EAAQY,QAE9E,qBAAKT,UAAU,sBAAf,SACC,wBAAQA,UAAU,gBAAgBO,QAAS,SAAAG,GAAO,OA9DxD,SAAyBjB,EAAyBG,GAEjD,IAAMe,EAASC,SAASC,cAAc,UAC/BC,EAASrB,EAAMsB,aAAetB,EAAMa,MACpCU,EAASvB,EAAMwB,cAAgBxB,EAAMyB,OAEzCtB,EAAKU,OAASV,EAAKsB,SACrBP,EAAOL,MAAQV,EAAKU,MACnBK,EAAOO,OAAStB,EAAKsB,QAGVP,EAAOQ,WAAW,MAE3BC,UACH3B,EACAG,EAAKyB,EAAKP,EACVlB,EAAK0B,EAAKN,EACVpB,EAAKU,MAASQ,EACdlB,EAAKsB,OAAUF,EACf,EACA,EACApB,EAAKU,MACLV,EAAKsB,QAGN,IAAMK,EAAcZ,EAAOa,UAAU,cAErCrC,EAAWoC,GAmCgDE,CAAgBzC,EAASY,IAA/E,0BAED,oBAAII,UAAU,qBAAd,qBACA,qBAAKA,UAAU,sBAAsBC,MAAO,CAAEC,UAAW,KAAzD,SACEhB,GAAY,qBAAKS,IAAKT,MAExB,qBAAKc,UAAU,6BAAf,SACC,wBAAQA,UAAU,iBAAiBO,QAAS,SAAAmB,GAAM,OAvCxD,SAAuBC,GACtB,IAAIC,EAAIhB,SAASC,cAAc,KAC7Be,EAAEC,KAAOF,EACTC,EAAEE,SAAW,aACbF,EAAEG,QAmCuDC,CAAc9C,IAApE,oCCzFQ+C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BZ,M","file":"static/js/main.e162457f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport Webcam from 'react-webcam';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\n\nfunction App() {\n\n  const webcamRef = React.useRef<Webcam>(null);\n  const [imgSrc, setImgSrc] = React.useState<string | null>(null);\n\tconst [imgObj, setImgObj] = React.useState<HTMLImageElement>();\n\tconst [cropImg, setCropImg] = React.useState<string>();\n\n  const capture = React.useCallback(() => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n\t\t\t\n\t\t\tconst image = new Image();\n\t\t\timage.src = ''+imageSrc;\n\n\t\t\tsetImgObj(image);\n\n      setImgSrc(imageSrc);\n    }\n    \n  }, [webcamRef, setImgSrc]);\n\n  const [crop, setCrop] = React.useState<ReactCrop.Crop | undefined>();\n\n\tconsole.log(crop);\n\n\tfunction getCroppedImage(image: HTMLImageElement, crop: ReactCrop.Crop) {\n\n\t\tconst canvas = document.createElement('canvas');\n  \tconst scaleX = image.naturalWidth / image.width;\n  \tconst scaleY = image.naturalHeight / image.height;\n\n\t\tif(crop.width && crop.height) {\n\t\t\tcanvas.width = crop.width;\n  \t\tcanvas.height = crop.height;\n\t\t}\n\n  \tconst ctx = canvas.getContext('2d')!; // ! força o ts a entender que a expressão nunca poderá ser nula\n\n\t\tctx.drawImage( // Não abusar dos ! depois\n\t\t\timage,\n\t\t\tcrop.x! * scaleX,\n\t\t\tcrop.y! * scaleY,\n\t\t\tcrop.width! * scaleX,\n\t\t\tcrop.height! * scaleY,\n\t\t\t0,\n\t\t\t0,\n\t\t\tcrop.width!,\n\t\t\tcrop.height!,\n\t\t);\n\n\t\tconst base64Image = canvas.toDataURL('image/jpeg');\n\n\t\tsetCropImg(base64Image);\n\t}\n\t\n\tfunction downloadImage(base64Img: string){\n\t\tvar a = document.createElement(\"a\"); //Create <a>\n    a.href = base64Img; //Image Base64 Goes here\n    a.download = \"Image.jpeg\"; //File name Here\n    a.click(); //Downloaded file\n\t}\n\n  return (\n    <>\n      <div className=\"ui container\">\n\t\t\t\t<h3 className=\"ui center aligned header\">Webcam Cropper</h3>\n\t\t\t\t<div className=\"ui two column stackable grid container\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<h4 className=\"ui top attached header\">Webcam</h4>\n\t\t\t\t\t\t<div className=\"ui attached segment\" style={{ minHeight: 300 }}>\n\t\t\t\t\t\t\t<Webcam\n\t\t\t\t\t\t\t\taudio={false}\n\t\t\t\t\t\t\t\tref={webcamRef}\n\t\t\t\t\t\t\t\tscreenshotFormat=\"image/jpeg\"\n\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ui bottom attached segment\">\n\t\t\t\t\t\t\t<button className=\"ui button red\" onClick={capture}>Capture photo</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<h4 className=\"ui top attached header\">Crop</h4>\n\t\t\t\t\t\t<div className=\"ui attached segment\" style={{ minHeight: 300 }}>\n\t\t\t\t\t\t\t{imgSrc && (<ReactCrop src={imgSrc} crop={crop} onChange={newCrop => setCrop(newCrop)}/>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ui attached segment\">\n\t\t\t\t\t\t\t<button className=\"ui button red\" onClick={cropimg => getCroppedImage(imgObj!, crop!)}>Crop Image</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h4 className=\"ui attached header\">Preview</h4>\n\t\t\t\t\t\t<div className=\"ui attached segment\" style={{ minHeight: 300 }}>\n\t\t\t\t\t\t\t{cropImg && (<img src={cropImg} />)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ui bottom attached segment\">\n\t\t\t\t\t\t\t<button className=\"ui button blue\" onClick={dwnimg => downloadImage(cropImg!)}>Download</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n    </>\n  );\n}\n\n{/* {imgSrc && (\n              <img\n                src={imgSrc}\n              />\n            )} */}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}